<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 鼎的博客</title>
    <link>http://example.org/post/</link>
    <description>Recent content in Posts on 鼎的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <lastBuildDate>Sun, 18 Aug 2019 11:21:24 +0800</lastBuildDate>
    
	<atom:link href="http://example.org/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>如何用github  Page浏览html</title>
      <link>http://example.org/post/%E5%A6%82%E4%BD%95%E7%94%A8github-page%E6%B5%8F%E8%A7%88html/</link>
      <pubDate>Sun, 18 Aug 2019 11:21:24 +0800</pubDate>
      
      <guid>http://example.org/post/%E5%A6%82%E4%BD%95%E7%94%A8github-page%E6%B5%8F%E8%A7%88html/</guid>
      <description>如果想在github上预览github仓库中的代码，可以通过使用github pages来实现这个功能。以下是我设置gitbub pages 的步骤，以备日后查询。 1.登入 GitHub，新建一个 repo。 1. 输入要创建的仓库名称，我这里的输入是demo 2. 初始化你的仓库并写入README文件 3. 点击绿色的按钮就创建了仓库
2.进入setting页面 1. 选中你刚才创建的仓库 2. 点击setting
3.setting页面向下滚，找到github pages进行设置 1. 选择master 分支。 2. 点击save，进行保存。
接下来得到这个仓库的预览地址。 结束</description>
    </item>
    
    <item>
      <title>如何用hugo搭建个人博客</title>
      <link>http://example.org/post/%E5%A6%82%E4%BD%95%E7%94%A8hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Sat, 17 Aug 2019 22:21:10 +0800</pubDate>
      
      <guid>http://example.org/post/%E5%A6%82%E4%BD%95%E7%94%A8hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</guid>
      <description>如何用Hugo搭建个人网站 下载和安装Hugo Hugo是用Go语言写的，可以直接下载，不需要额外的依赖。
win64x对应的是hugo_x.xx.x_Windows-64bit.zip，下载后创建安装目录，例如D:\Hugo，之下建两个子目录bin和Sites，然后解压，例如解压到D:\Hugo\bin，把解压的hugo_x.xx.x_windows_amd64.exe文件重命名为hugo.exe，然后加到环境变量Path里，方便在命令行里使用。
添加成功后打开cmd或者PowerShell，运行命令hugo version，如果安装成功，会输出Hugo Static Site Generator vx.xx.x
搭建个人网站 首先要确定自己要搭建什么网站，我要建的是托管到Github的用户网站，按照Github Pages规则，网站名应该是，所以我第一步创建网站用以下命令：
cd D:\Hugo\Sites hugo new site brent-li.github.io  之后在Site目录下多了一个brent-li.github.io文件夹，进入文件夹可以看到目录结构如下：
|-- archetypes |-- config.toml |-- content |-- data |-- layouts |-- static  archetypes目录里可以放一些原型，用于hugo新建内容的配置属性。config.toml是网站的配置属性文件。content文件夹里放你网站的内容，例如你发布的博客文章。data目录是Hugo使用的配置文件存放的地方。layout目录存放布局内容。static目录存放静态资源如图片、css等。
接下来我们先在content里放点东西。命令如下：
cd xxx.github.io hugo new post/开博大吉.md  Hugo会在content目录下创建post目录，在post目录下创建开博大吉.md文件。之后打开md文件，里面已经有些内容
--- title: &amp;quot;开博大吉&amp;quot; date: 2019-08-13T14:49:45+08:00 draft: true ---  &amp;mdash;包起来的内容是TOML配置信息，叫作扉页(front matter)，默认这3项，可以再添加一些，其中draft是true时Hugo不会真正发布它，要发布时改成false。修改后的扉页如下：
--- date = &amp;quot;2017-02-08T22:07:46+08:00&amp;quot; title = &amp;quot;Scala学习笔记之模式匹配&amp;quot; draft = false tags = [&amp;quot;scala&amp;quot;,&amp;quot;pattern matching&amp;quot;,&amp;quot;模式匹配&amp;quot;] share = true ---  然后再把我的博客内容复制进md文件，一篇博客完成了。</description>
    </item>
    
    <item>
      <title>制作一个可以用鼠标拖动的div</title>
      <link>http://example.org/post/%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA%E5%8F%AF%E4%BB%A5%E7%94%A8%E9%BC%A0%E6%A0%87%E6%8B%96%E5%8A%A8%E7%9A%84div/</link>
      <pubDate>Tue, 13 Aug 2019 15:08:54 +0800</pubDate>
      
      <guid>http://example.org/post/%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA%E5%8F%AF%E4%BB%A5%E7%94%A8%E9%BC%A0%E6%A0%87%E6%8B%96%E5%8A%A8%E7%9A%84div/</guid>
      <description>我的第一个作品（js） 在观看方方老师的教学视频后，制作了一个小作品。在这里记录一些学习内容，以便日后的复习。
制作思路 实现的思路是这样的。先用js创建一个div，使用css的绝对定位，使样式中的top和left值发生变化，来实现div位置变化。鼠标拖动可以使用事件监听来实现，在onmousedown，onmousemove，onmouseup的时候实现不同的js代码，来完成鼠标拖动div。遇到bug时候，使用console方法去调试。
基本工作 在html中引入js 只需
&amp;lt;script src=&amp;quot;main.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;  代码如下
&amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;quot;zh&amp;quot;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot;&amp;gt; &amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1.0&amp;quot;&amp;gt; &amp;lt;meta http-equiv=&amp;quot;X-UA-Compatible&amp;quot; content=&amp;quot;ie=edge&amp;quot;&amp;gt; &amp;lt;title&amp;gt;我的第一个js应用&amp;lt;/title&amp;gt; &amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;style.css&amp;quot;&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;script src=&amp;quot;main.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt;  在js中创建div 需要在style.css中创建一个基本的div，并引入js中 style.css代码如下
.demo{ border:1px solid red; height: 100px; width: 100px; position: absolute; top:0; left:0; } body{ margin: 0; height: 100vh; box-sizing: border-box }  在js中引入只需要两条代码。如下
let div1 = document.createElement(&#39;div&#39;); document.body.appendChild(div1); // 并指定 div1.</description>
    </item>
    
    <item>
      <title>开博大吉</title>
      <link>http://example.org/post/%E5%BC%80%E5%8D%9A%E5%A4%A7%E5%90%89/</link>
      <pubDate>Tue, 13 Aug 2019 14:49:45 +0800</pubDate>
      
      <guid>http://example.org/post/%E5%BC%80%E5%8D%9A%E5%A4%A7%E5%90%89/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>